import requests
import pandas as pd
import urllib3
import pyodbc

urllib3.disable_warnings()

# üîê –¢–æ–∫–µ–Ω –∏ URL
token = "03e8613f-ef79-dfec-ca7f-149077f9f80a"
url = "https://roma-pizza-co.iiko.it/resto/api/v2/entities/products/group/list"
params = {
    "key": token,
    "includeDeleted": "false"
}

# üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET-–∑–∞–ø—Ä–æ—Å
response = requests.get(url, params=params, verify=False)

if response.ok:
    data = response.json()

    # üìÑ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ DataFrame
    df = pd.json_normalize(data)

    # üõ† –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQL Server
    conn = pyodbc.connect(
        'DRIVER={ODBC Driver 17 for SQL Server};'
        'SERVER=TA_GEO_07\\SQLEXPRESS;'
        'DATABASE=Roma_pizza;'
        'Trusted_Connection=yes;'
    )
    cursor = conn.cursor()

    # ‚ùó –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ)
    cursor.execute("""
    IF OBJECT_ID('dbo.stagging_table_iiko_product_groups', 'U') IS NULL
    CREATE TABLE stagging_table_iiko_product_groups (
        id UNIQUEIDENTIFIER PRIMARY KEY,
        name NVARCHAR(255),
        description NVARCHAR(255),
        code NVARCHAR(100),
        num NVARCHAR(100),
        parent UNIQUEIDENTIFIER,
        deleted BIT
    )
    """)
    conn.commit()

    # üßπ –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ –≤—Å—Ç–∞–≤–∫–æ–π
    cursor.execute("DELETE FROM stagging_table_iiko_product_groups")
    conn.commit()

    # üì§ –í—Å—Ç–∞–≤–∫–∞ –≤ –ë–î
    for _, row in df.iterrows():
        cursor.execute("""
            INSERT INTO stagging_table_iiko_product_groups (id, name, description, code, num, parent, deleted)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        """, row.get("id"),
             row.get("name"),
             row.get("description"),
             row.get("code"),
             row.get("num"),
             row.get("parent"),
             row.get("deleted"))
    conn.commit()

    cursor.close()
    conn.close()
    df.to_excel('product_group.xlsx', index=False)
    print("‚úÖ –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–Ω—ã–µ –≥—Ä—É–ø–ø—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ SQL Server")

else:
    print("[!] –û—à–∏–±–∫–∞:", response.status_code, response.text)
